
env:
   global:
     - CONAN_REFERENCE: "bitprim-core/0.1"
     - CONAN_USERNAME: "bitprim"
     - CONAN_LOGIN_USERNAME: "bitprim"
     - CONAN_CHANNEL: "stable"
     - CONAN_UPLOAD: "https://api.bintray.com/conan/bitprim/bitprim-core"

linux: &linux
   os: linux
   sudo: required
   language: python
   python: "3.6"
   services:
     - docker
osx: &osx
   os: osx
   language: generic
matrix:
   include:

      - <<: *linux
        env: CONAN_GCC_VERSIONS=4.9 CONAN_DOCKER_IMAGE=lasote/conangcc49

      - <<: *linux
        env: CONAN_GCC_VERSIONS=5.4 CONAN_DOCKER_IMAGE=lasote/conangcc54

      - <<: *linux
        env: CONAN_GCC_VERSIONS=6.3 CONAN_DOCKER_IMAGE=lasote/conangcc63

before_install:

  # Set aliases for readability.
  - if [[ $CC             == gcc     ]]; then GCC=true; fi
  - if [[ $CC             == clang   ]]; then CLANG=true; fi
  - if [[ $LINK           == static  ]]; then STATIC=true; fi
  - if [[ $LINK           == dynamic ]]; then DYNAMIC=true; fi
  - if [[ $TRAVIS_OS_NAME == osx     ]]; then OSX=true; fi
  - if [[ $TRAVIS_OS_NAME == linux   ]]; then LINUX=true; fi

  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi

install:

  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

    # Export CC/CXX to control gcc version.
    #- if [[ $GCC                         ]]; then export CC=gcc-4.8; export CXX=g++-4.8; fi

    # Download and install packages.
    - if [[ $OSX   && $CLANG && $DYNAMIC ]]; then brew unlink boost; brew install boost; fi

  - chmod +x .travis/install.sh
  - ./.travis/install.sh

before_script:
  ############################################################################
  # Set the git identity (for pushing the documentation and the benchmarks)
  ############################################################################
  - git config --global user.name "Travis bot"
  - git config --global user.email travis-bot@travis-ci.org

  ############################################################################
  # Go back to the root of the project and setup the build directory
  ############################################################################

  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi

  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build
  - cd build 
  - cmake .. -DWITH_TESTS=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ${BOOST_OPTS}

script:

  ############################################################################
  # Custom script for external dependences
  ############################################################################
  - cd ${DEPS_DIR}
  - wget -O build_deps.sh  https://raw.githubusercontent.com/hanchon/travis_complete_cache/master/build_deps.sh
  - sudo chmod 777 build_deps.sh  
  # Install Boost
  - ./build_deps.sh boost "${TRAVIS_OS_NAME}"
  #Set linux variables:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      export BOOST_OPTS="-DBOOST_ROOT=/home/travis/boost -DBOOST_INCLUDEDIR=/home/travis/boost/include -DBOOST_LIBRARYDIR=/home/travis/boost/lib"    
      export ZEROMQ=" -DZeroMQ_ROOT_DIR=/home/travis/zeromq "  
      export PROTOBUF=" -DProtobuf_ROOT_DIR=/home/travis/protobuf "
      export PATH=/home/travis/protobuf/bin:${PATH}
      sudo ldconfig
    else
      export BOOST_OPTS=" "    
      export ZEROMQ=" "  
      export PROTOBUF=" "
    fi  
    
  ############################################################################
  # Custom script for internal dependences
  ############################################################################
  - wget -O build_bitprim.sh  https://raw.githubusercontent.com/hanchon/travis_complete_cache/master/build_bitprim.sh
  - sudo chmod 777 build_bitprim.sh
  #Install bitprim-secp256k1
  - ./build_bitprim.sh secp256k1 "${TRAVIS_OS_NAME}"
  - chmod +x .travis/run.sh
  - ./.travis/run.sh
